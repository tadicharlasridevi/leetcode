1)def getMinDistance(self, n: List[int], t: int, s: int) -> int:
        b=[]
        for i in range(0,len(n)):
            if(t==n[i]):
                b.append(abs(i-s))
        return(min(b))
        
        
        
        
  2)def getMinDistance(self, n: List[int], t: int, s: int) -> int:
        m=list(set(n))
        b=[]
        for i in range(0,len(n)):
            if(len(m)==1):
                b.append(0)
            elif(t==n[i]):
                b.append(abs(i-s))
        return(min(b))
                
       
                
                
                
                
                
                
                
                
                
                
                
                
                
                
  Input: nums = [1,2,3,4,5], target = 5, start = 3
Output: 1
Explanation: nums[4] = 5 is the only value equal to target, so the answer is abs(4 - 3) = 1.
Example 2:

Input: nums = [1], target = 1, start = 0
Output: 0
Explanation: nums[0] = 1 is the only value equal to target, so the answer is abs(0 - 0) = 0.
Example 3:

Input: nums = [1,1,1,1,1,1,1,1,1,1], target = 1, start = 0
Output: 0
Explanation: Every value of nums is 1, but nums[0] minimizes abs(i - start), which is abs(0 - 0) = 0.
